#!/bin/bash

# üöÄ Script de preparaci√≥n para RENDER
# Ejecutar con: bash prepare_render.sh

echo "üéØ PREPARANDO DASHBOARD PARA RENDER.COM"
echo "======================================"

# Colores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# 1. Verificar archivos para Render
log_info "üìã Verificando configuraci√≥n para Render..."

if [ -f "Procfile" ]; then
    log_success "‚úÖ Procfile encontrado"
    echo "   Contenido: $(cat Procfile)"
else
    log_warning "‚ùå Procfile no encontrado"
fi

if [ -f "requirements.txt" ]; then
    log_success "‚úÖ requirements.txt encontrado"
    echo "   Dependencias: $(wc -l < requirements.txt) paquetes"
else
    log_warning "‚ùå requirements.txt no encontrado"
fi

if [ -f "runtime.txt" ]; then
    log_success "‚úÖ runtime.txt encontrado"
    echo "   Python version: $(cat runtime.txt)"
else
    log_warning "‚ùå runtime.txt no encontrado"
fi

# 2. Verificar que app.py tenga server
log_info "üîç Verificando configuraci√≥n de servidor..."

if grep -q "server = app.server" app.py; then
    log_success "‚úÖ Variable 'server' configurada en app.py"
else
    log_warning "‚ö†Ô∏è Verifica que app.py tenga: server = app.server"
fi

# 3. Test b√°sico de importaci√≥n
log_info "üß™ Probando importaci√≥n b√°sica..."

python3 -c "
import sys
try:
    import dash
    import gunicorn
    import pandas
    import plotly
    print('‚úÖ Dependencias principales disponibles')
except ImportError as e:
    print(f'‚ö†Ô∏è Dependencia faltante: {e}')
    print('   Se instalar√° autom√°ticamente en Render')
" 2>/dev/null

# 4. Estado del repositorio Git
log_info "üì¶ Estado del repositorio Git..."

if [ -d ".git" ]; then
    log_success "‚úÖ Repositorio Git inicializado"
    
    # Verificar si hay cambios pendientes
    if git diff --quiet && git diff --staged --quiet; then
        log_success "‚úÖ No hay cambios pendientes"
    else
        log_warning "‚ö†Ô∏è Hay cambios sin commit"
        echo "   Ejecuta: git add . && git commit -m 'Update for Render'"
    fi
    
    # Verificar remote
    if git remote -v | grep -q "origin"; then
        log_success "‚úÖ Remote origin configurado"
        echo "   Remote: $(git remote get-url origin)"
    else
        log_warning "‚ö†Ô∏è No hay remote origin configurado"
        echo "   Necesitas configurar GitHub remote"
    fi
else
    log_warning "‚ö†Ô∏è Git no inicializado"
    echo "   Ejecuta: git init"
fi

# 5. Informaci√≥n sobre Render
echo ""
log_info "üåê INFORMACI√ìN PARA RENDER.COM:"
echo ""

echo "üìù CONFIGURACI√ìN SUGERIDA:"
echo "   ‚Ä¢ Name: dashboard-hidrologico-mme"
echo "   ‚Ä¢ Environment: Python 3"
echo "   ‚Ä¢ Build Command: pip install -r requirements.txt"
echo "   ‚Ä¢ Start Command: gunicorn app:server --bind 0.0.0.0:\$PORT"
echo "   ‚Ä¢ Plan: Starter (\$7/mes) - recomendado para producci√≥n"
echo "   ‚Ä¢ Region: Oregon (US West) o Frankfurt (EU Central)"

echo ""
echo "üîß VARIABLES DE ENTORNO (opcionales):"
echo "   ‚Ä¢ PYTHON_VERSION: 3.9.18"
echo "   ‚Ä¢ PYTHONUNBUFFERED: 1"
echo "   ‚Ä¢ DASH_DEBUG: False"

echo ""
echo "üìä HEALTH CHECK:"
echo "   ‚Ä¢ Path: /health"
echo "   ‚Ä¢ Tu app ya tiene este endpoint configurado"

echo ""
log_info "üöÄ PASOS PARA DESPLEGAR EN RENDER:"
echo ""

echo "1Ô∏è‚É£  Sube tu c√≥digo a GitHub:"
echo "     git add ."
echo "     git commit -m 'Dashboard listo para Render'"
echo "     git push origin main"

echo ""
echo "2Ô∏è‚É£  Ve a render.com y crea cuenta"

echo ""
echo "3Ô∏è‚É£  Conecta tu repositorio de GitHub"

echo ""
echo "4Ô∏è‚É£  Configura Web Service con los datos de arriba"

echo ""
echo "5Ô∏è‚É£  ¬°Despliega y disfruta!"

echo ""
echo "üéØ URL RESULTANTE:"
echo "   https://dashboard-hidrologico-mme.onrender.com"

echo ""
log_success "‚ú® ¬°Tu dashboard est√° listo para Render!"

echo ""
echo "üí° VENTAJAS DE RENDER:"
echo "   ‚Ä¢ ‚úÖ No se 'duerme' (en plan Starter+)"
echo "   ‚Ä¢ ‚úÖ SSL autom√°tico (HTTPS)"
echo "   ‚Ä¢ ‚úÖ Despliegues autom√°ticos desde GitHub"
echo "   ‚Ä¢ ‚úÖ Interface simple y clara"
echo "   ‚Ä¢ ‚úÖ 99.9% uptime garantizado"
echo "   ‚Ä¢ ‚úÖ Soporte t√©cnico responsive"

echo ""
echo "üí∞ COSTOS:"
echo "   ‚Ä¢ Free: 750h/mes (se duerme)"
echo "   ‚Ä¢ Starter: \$7/mes (siempre activo) ‚Üê RECOMENDADO"
echo "   ‚Ä¢ Pro: \$25/mes (m√°s recursos)"
